Index: src/Todolist.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Todolist.js	(date 1555517055000)
+++ src/Todolist.js	(date 1555686429000)
@@ -4,106 +4,111 @@
 import Button from '@material-ui/core/Button';
 import Fab from '@material-ui/core/Fab';
 import AddIcon from '@material-ui/icons/Add';
-import { Link } from 'react-router-dom';
+import {Link} from 'react-router-dom';
 import List from '@material-ui/core/List';
 import ListItem from '@material-ui/core/ListItem';
 import ListItemIcon from '@material-ui/core/ListItemIcon';
 import ListItemText from '@material-ui/core/ListItemText';
 import DeleteForeverIcon from '@material-ui/icons/DeleteForever';
 import ListSubheader from '@material-ui/core/ListSubheader';
-import { addTask, deleteTask } from './actions';
+import {addTask, deleteTask} from './actions';
 
 const container = {
-    display: 'flex',
-    flexWrap: 'wrap',
-    maxWidth:400,
-    margin: '0 auto',
-    marginTop: 20,    
+	display: 'flex',
+	flexWrap: 'wrap',
+	maxWidth: 400,
+	margin: '0 auto',
+	marginTop: 20,
 }
 
 const navList = {
-  maxWidth:400,
+	maxWidth: 400,
 }
 
-class Task extends React.Component {  
-  
-  constructor(props) {
-    super(props);
-    this.state = {
-      text: '',      
-    }
-  }
-
-  addTask() {    
-    this.props.addTask(this.state.text);
-  }
-
-  deleteTask(id) {
-    this.props.deleteTask(id);
-  }
-
-  renderTasks() {
-    const { tasks } = this.props;    
-    return (
-            
-      <List 
-        component="nav"
-        style={navList}
-        subheader={<ListSubheader component="div">Tasks list</ListSubheader>} >      
-      {
-            tasks.map(task => {
-              return (
-                <ListItem key={task.id} button>
-                <ListItemIcon>
-                  <DeleteForeverIcon onClick={() => this.deleteTask(task.id)} />
-                </ListItemIcon>
-                <ListItemText  inset primary={task.text}/>                
-                </ListItem>      
-              )
-            })
-        }
-      
-    </List>  
-      
-    )
-  }
-
-  render () { 
-      return (        
-        <div style={container}>
-        <div style={container}>
-        <Input
-            placeholder="Add your task here"
-            className="input"
-            inputProps={{
-            'aria-label': 'Description',
-            }}
-            onChange={event => this.setState({ text: event.target.value })}
-        />        
-        <Fab
-         color="primary" aria-label="Add" className="fab"
-         onClick={() => this.addTask()}>
-            <AddIcon />
-        </Fab>
-        
-        <Button 
-            size="small"
-            component={Link}
-            to="/"            
-            >Return to welcome screen</Button>   
-            </div>
-
-            { this.renderTasks() }
-
-            </div>
-  );
-}
+class Task extends React.Component {
+	
+	state = {
+		text: ''
+	}
+	
+	addTask = () => {
+		this.props.addTask(this.state.text);
+	}
+	
+	deleteTask = (id) => {
+		this.props.deleteTask(id);
+	}
+	
+	onInputChange = ({target: {value}}) => {
+		this.setState({text: value})
+	}
+	
+	renderTasks() {
+		const {tasks} = this.props;
+		return (
+			
+			<List
+				component="nav"
+				style={navList}
+				subheader={<ListSubheader component="div">Tasks list</ListSubheader>}>
+				{
+					tasks.map(task => {
+						return (
+							<ListItem key={task.id} button>
+								<ListItemIcon>
+									<DeleteForeverIcon onClick={() => this.deleteTask(task.id)}/>
+								</ListItemIcon>
+								<ListItemText inset primary={task.text}/>
+							</ListItem>
+						)
+					})
+				}
+			</List>
+		
+		)
+	}
+	
+	render() {
+		return (
+			<div style={container}>
+				<div style={container}>
+					<Input
+						placeholder="Add your task here"
+						className="input"
+						inputProps={{
+							'aria-label': 'Description',
+						}}
+						onChange={this.onInputChange}
+					/>
+					<Fab
+						color="primary" aria-label="Add" className="fab"
+						onClick={this.addTask}>
+						<AddIcon/>
+					</Fab>
+					
+					<Button
+						size="small"
+						component={Link}
+						to="/"
+					>Return to welcome screen</Button>
+				</div>
+				
+				{this.renderTasks()}
+			
+			</div>
+		);
+	}
 }
 
-function mapStateToProps(state) {  
-  return {
-    tasks: state
-  }
+const mapStateToProps = (state) => {
+	return {
+		tasks: state
+	}
 }
 
-export default connect(mapStateToProps, { addTask, deleteTask })(Task);
\ No newline at end of file
+const mapDispatchToProps = (dispatch) => ({
+	addTask: (text) => dispatch(addTask(text)),
+	deleteTask: (id) => dispatch(deleteTask(id)),
+})
+
+export default connect(mapStateToProps, mapDispatchToProps)(Task);
Index: src/reducers/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/reducers/index.js	(date 1555517055000)
+++ src/reducers/index.js	(date 1555686039000)
@@ -1,34 +1,15 @@
-import { ADD_TASK, DELETE_TASK } from '../constants';
-import { bake_cookie, read_cookie } from 'sfcookies';
-
-const task = (action) => {
-  let { text } = action;  
-  return {
-    id: Math.random(),
-    text    
-  }  
-}
+import {ADD_TASK, DELETE_TASK} from '../constants';
+import {read_cookie} from 'sfcookies';
 
-const removeById = (state = [], id) => {
-  const tasks = state.filter(task => task.id !== id);  
-  return tasks;
-}
-
-const tasks = (state = [], action) => {
-  let tasks = null;
-  state = read_cookie('tasks');
-  switch(action.type) {
-    case ADD_TASK:
-      tasks = [...state, task(action)];
-      bake_cookie('tasks', tasks);
-      return tasks;
-    case DELETE_TASK:
-      tasks = removeById(state, action.id);
-      bake_cookie('tasks', tasks);
-      return tasks;    
-    default:
-      return state;
-  }
+const tasks = (state = read_cookie('tasks') || [], action) => {
+	switch (action.type) {
+		case ADD_TASK:
+			return action.payload;
+		case DELETE_TASK:
+			return action.payload;
+		default:
+			return state;
+	}
 }
 
-export default tasks;
\ No newline at end of file
+export default tasks;
Index: src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/App.js	(date 1555517055000)
+++ src/App.js	(date 1555685992000)
@@ -1,66 +1,66 @@
 import React from 'react';
 import PropTypes from 'prop-types';
-import { withStyles } from '@material-ui/core/styles';
+import {withStyles} from '@material-ui/core/styles';
 import Card from '@material-ui/core/Card';
 import CardActions from '@material-ui/core/CardActions';
 import CardContent from '@material-ui/core/CardContent';
 import Button from '@material-ui/core/Button';
 import Typography from '@material-ui/core/Typography';
-import { Link } from 'react-router-dom';
+import {Link} from 'react-router-dom';
 
 const styles = {
-  card: {
-    maxWidth: 275,
-    margin: '0 auto',
-    marginTop: 20,
-  },
-  bullet: {
-    display: 'inline-block',
-    margin: '0 2px',
-    transform: 'scale(0.8)',
-  },
-  title: {
-    fontSize: 18,
-  },
-  pos: {
-    marginBottom: 12,
-  },
+	card: {
+		maxWidth: 275,
+		margin: '0 auto',
+		marginTop: 20,
+	},
+	bullet: {
+		display: 'inline-block',
+		margin: '0 2px',
+		transform: 'scale(0.8)',
+	},
+	title: {
+		fontSize: 18,
+	},
+	pos: {
+		marginBottom: 12,
+	},
 };
 
 function SimpleCard(props) {
-  const { classes } = props;
-  const bull = <span className={classes.bullet}>•</span>;
-
-  return (
-    <Card className={classes.card}>
-      <CardContent>
-        <Typography className={classes.title} color="textSecondary" gutterBottom>
-          Hi there!!
-        </Typography>
-        <Typography variant="h5" component="h2">
-          it
-          {bull}
-          is
-          {bull}
-          welcome
-          {bull}
-          screen!
-        </Typography>
-        <Typography className={classes.pos} color="textSecondary">          
-        </Typography>
-        <Typography component="p">
-        Let's do the task          
-        </Typography>
-      </CardContent>
-      <CardActions>
-      <Button size="small" component={Link} to="/Todolist">To do screen</Button>
-      </CardActions>
-    </Card>
-  );
+	const {classes} = props;
+	const bull = <span className={classes.bullet}>•</span>;
+	
+	return (
+		<Card className={classes.card}>
+			<CardContent>
+				<Typography className={classes.title} color="textSecondary" gutterBottom>
+					Hi there!!
+				</Typography>
+				<Typography variant="h5" component="h2">
+					it
+					{bull}
+					is
+					{bull}
+					welcome
+					{bull}
+					screen!
+				</Typography>
+				<Typography className={classes.pos} color="textSecondary">
+				</Typography>
+				<Typography component="p">
+					Let's do the task
+				</Typography>
+			</CardContent>
+			<CardActions>
+				<Button size="small" component={Link} to="/Todolist">To do screen</Button>
+			</CardActions>
+		</Card>
+	);
 }
 
 SimpleCard.propTypes = {
-  classes: PropTypes.object.isRequired,
+	classes: PropTypes.object.isRequired,
 };
 
 export default withStyles(styles)(SimpleCard);
\ No newline at end of file
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package-lock.json	(date 1555517055000)
+++ package-lock.json	(date 1555685642000)
@@ -6595,7 +6595,8 @@
         },
         "ansi-regex": {
           "version": "2.1.1",
-          "bundled": true
+          "bundled": true,
+          "optional": true
         },
         "aproba": {
           "version": "1.2.0",
@@ -6632,7 +6633,8 @@
         },
         "code-point-at": {
           "version": "1.1.0",
-          "bundled": true
+          "bundled": true,
+          "optional": true
         },
         "concat-map": {
           "version": "0.0.1",
@@ -6641,7 +6643,8 @@
         },
         "console-control-strings": {
           "version": "1.1.0",
-          "bundled": true
+          "bundled": true,
+          "optional": true
         },
         "core-util-is": {
           "version": "1.0.2",
@@ -6744,7 +6747,8 @@
         },
         "inherits": {
           "version": "2.0.3",
-          "bundled": true
+          "bundled": true,
+          "optional": true
         },
         "ini": {
           "version": "1.3.5",
@@ -6754,6 +6758,7 @@
         "is-fullwidth-code-point": {
           "version": "1.0.0",
           "bundled": true,
+          "optional": true,
           "requires": {
             "number-is-nan": "^1.0.0"
           }
@@ -6773,11 +6778,13 @@
         },
         "minimist": {
           "version": "0.0.8",
-          "bundled": true
+          "bundled": true,
+          "optional": true
         },
         "minipass": {
           "version": "2.2.4",
           "bundled": true,
+          "optional": true,
           "requires": {
             "safe-buffer": "^5.1.1",
             "yallist": "^3.0.0"
@@ -6794,6 +6801,7 @@
         "mkdirp": {
           "version": "0.5.1",
           "bundled": true,
+          "optional": true,
           "requires": {
             "minimist": "0.0.8"
           }
@@ -6866,7 +6874,8 @@
         },
         "number-is-nan": {
           "version": "1.0.1",
-          "bundled": true
+          "bundled": true,
+          "optional": true
         },
         "object-assign": {
           "version": "4.1.1",
@@ -6876,6 +6885,7 @@
         "once": {
           "version": "1.4.0",
           "bundled": true,
+          "optional": true,
           "requires": {
             "wrappy": "1"
           }
@@ -6951,7 +6961,8 @@
         },
         "safe-buffer": {
           "version": "5.1.1",
-          "bundled": true
+          "bundled": true,
+          "optional": true
         },
         "safer-buffer": {
           "version": "2.1.2",
@@ -6981,6 +6992,7 @@
         "string-width": {
           "version": "1.0.2",
           "bundled": true,
+          "optional": true,
           "requires": {
             "code-point-at": "^1.0.0",
             "is-fullwidth-code-point": "^1.0.0",
@@ -6998,6 +7010,7 @@
         "strip-ansi": {
           "version": "3.0.1",
           "bundled": true,
+          "optional": true,
           "requires": {
             "ansi-regex": "^2.0.0"
           }
@@ -7036,11 +7049,13 @@
         },
         "wrappy": {
           "version": "1.0.2",
-          "bundled": true
+          "bundled": true,
+          "optional": true
         },
         "yallist": {
           "version": "3.0.2",
-          "bundled": true
+          "bundled": true,
+          "optional": true
         }
       }
     },
@@ -13876,6 +13891,11 @@
         "symbol-observable": "^1.2.0"
       }
     },
+    "redux-thunk": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/redux-thunk/-/redux-thunk-2.3.0.tgz",
+      "integrity": "sha512-km6dclyFnmcvxhAcrQV2AkZmPQjzPDjgVlQtR0EQjxZPyJ0BnMf3in1ryuR8A2qU0HldVRfxYXbFSKlI3N7Slw=="
+    },
     "regenerate": {
       "version": "1.4.0",
       "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.0.tgz",
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package.json	(date 1555517055000)
+++ package.json	(date 1555685642000)
@@ -12,6 +12,7 @@
     "react-router-dom": "^5.0.0",
     "react-scripts": "2.1.8",
     "redux": "^4.0.1",
+    "redux-thunk": "^2.3.0",
     "sfcookies": "^1.0.2"
   },
   "scripts": {
Index: src/actions/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/actions/index.js	(date 1555517055000)
+++ src/actions/index.js	(date 1555686043000)
@@ -1,17 +1,32 @@
-import { ADD_TASK, DELETE_TASK } from '../constants';
+import {ADD_TASK, DELETE_TASK} from '../constants';
+import {bake_cookie} from 'sfcookies';
 
-export const addTask = (text) => {
-  const action = {
-    type: ADD_TASK,
-    text,    
-  }  
-  return action;
-}
+const addTaskAction = (payload) => ({
+	type: ADD_TASK,
+	payload,
+})
 
-export const deleteTask = (id) => {
-  const action = {
-    type: DELETE_TASK,
-    id
-  }  
-  return action;
+const deleteTaskAction = (payload) => ({
+	type: DELETE_TASK,
+	payload
+})
+
+export const addTask = (text) => (dispatch, getState) => {
+	const tasksList = getState();
+	const task = {
+		id: Math.random(),
+		text
+	};
+	const newTaskList = [...tasksList, task];
+	
+	bake_cookie('tasks', newTaskList);
+	return dispatch(addTaskAction(newTaskList));
+}
+
+export const deleteTask = (id) => (dispatch, getState) => {
+	const tasksList = getState();
+	const newTaskList = tasksList.filter(task => task.id !== id);
+	
+	bake_cookie('tasks', newTaskList);
+	return dispatch(deleteTaskAction(newTaskList));
 }
Index: src/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/index.js	(date 1555517055000)
+++ src/index.js	(date 1555685999000)
@@ -1,25 +1,24 @@
 import React from 'react';
 import ReactDOM from 'react-dom';
-import { BrowserRouter, Switch, Route } from 'react-router-dom';
+import {BrowserRouter, Switch, Route} from 'react-router-dom';
 import './index.css';
-import { Provider } from 'react-redux';
-import { createStore } from 'redux';
+import {Provider} from 'react-redux';
+import {createStore, applyMiddleware} from 'redux';
+import ReduxThunk from 'redux-thunk';
 import App from './App';
 import Todolist from './Todolist';
 import reducer from './reducers';
 
-const store = createStore(reducer);
+const store = createStore(reducer, applyMiddleware(ReduxThunk));
 
 ReactDOM.render(
-  <Provider store={store}>
-    <BrowserRouter>
-      <div>
-        <Switch>
-          <Route exact path="/" component={App} />
-          <Route exact path="/todolist" component={Todolist} />          
-        </Switch>
-      </div>
-    </BrowserRouter>
-  </Provider>, document.getElementById('root'));
-
-
+	<Provider store={store}>
+		<BrowserRouter>
+			<div>
+				<Switch>
+					<Route exact path="/" component={App}/>
+					<Route exact path="/todolist" component={Todolist}/>
+				</Switch>
+			</div>
+		</BrowserRouter>
+	</Provider>, document.getElementById('root'));
